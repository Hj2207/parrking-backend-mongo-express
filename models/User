const mongoose = require('mongoose');
const bcrypt = require("bcryptjs");

const UserSchema = new mongoose.Schema({
    name: {
        type: String,
        required: [true, "Please add a name"],
      },
      email: {
        type: String,
        required: [true, "Please add an email"],
        unique: true,
        match: [
          /^\w+([\.-]?\w+)*@\w+([\.-]?\w+)*(\.\w{2,3})+$/,
          "Please add a valid email",
        ],
      },
      type: {
        type: String,
        enum: ["Booking Counter Agent", "Parking Zone Assistant"],
        default: "Parking Zone Assistant",
      },
      password: {
        type: String,
        required: [true, "Please add a password"],
        minlength: 6,
        select:false
      }
    
});

UserSchema.pre("save", async function (next) {
    if (!this.isModified("password")) {
      next();
    }
    const salt = await bcrypt.genSalt(10);
    this.password = await bcrypt.hash(this.password, salt);
  });

  UserSchema.methods.matchPassword = async function (enterredPassword) {
    console.log(this.password);
    return await bcrypt.compare(enterredPassword, this.password);
  };

module.exports = mongoose.model("User", UserSchema);  